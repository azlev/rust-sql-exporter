---
apiVersion: v1
kind: Pod
metadata:
  name: rust-sql-exporter
spec:
  containers:
  - name: rust-sql-exporter
    image: localhost/rust-sql-exporter:latest
    env:
    - name: RSE_CONNINFO
      value: 'host=127.0.0.1 user=postgres password=postgres'
    - name: RSE_CONFIG
      value: /conf/queries.yaml
    ports:
    - containerPort: 3000
      hostPort: 3000
    volumeMounts:
    - name: config-volume
      mountPath: /conf
  - name: postgres
    image: postgres:17
    env:
    - name: POSTGRES_PASSWORD
      value: postgres
    ports:
    - containerPort: 5432
      hostPort: 5432
  volumes:
    - name: config-volume
      configMap:
        name: rust-sql-exporter
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rust-sql-exporter
data:
  queries.yaml: |
    - metric: pg_database_size_bytes
      query: SELECT datname, pg_database_size(datname)::float8 from pg_database
      type: gauge
      help: Disk space used by the database
    - metric: pg_database_connection_limit
      query: SELECT datname, datconnlimit::float8 FROM pg_database
      type: gauge
      help: Connection limit set for the database
    - metric: pg_locks_count
      query: |
       SELECT 
            pg_database.datname as datname,
            tmp.mode as mode,
            COALESCE(count, 0)::float8
         FROM 
            (
            VALUES 
                ('accesssharelock'), 
                ('rowsharelock'), 
                ('rowexclusivelock'), 
                ('shareupdateexclusivelock'), 
                ('sharelock'), 
                ('sharerowexclusivelock'), 
                ('exclusivelock'), 
                ('accessexclusivelock'), 
                ('sireadlock')
            ) AS tmp(mode)
            CROSS JOIN pg_database 
            LEFT JOIN (
              SELECT 
                database, 
                lower(mode) AS mode, 
                count(*) AS count 
              FROM 
                pg_locks 
              WHERE 
                database IS NOT NULL 
              GROUP BY 
                database, 
                lower(mode)
            ) AS tmp2 ON tmp.mode = tmp2.mode 
            and pg_database.oid = tmp2.database 
          ORDER BY 1
      type: gauge
      help: Number of locks
    - metric: pg_stat_user_indexes_idx_scan
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          indexrelname,
          COALESCE(idx_scan, 0)::float8
        FROM
          pg_stat_user_indexes
      type: counter
      help: Number of index scans initiated on this index
    - metric: pg_stat_user_indexes_last_idx_scan
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          indexrelname,
          EXTRACT(EPOCH FROM AGE(COALESCE(last_idx_scan, '1970-01-01Z')))::float8
        FROM
          pg_stat_user_indexes
      type: gauge
      help: he time of the last scan on this index, based on the most recent transaction stop time
    - metric: pg_stat_user_indexes_idx_tup_read
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          indexrelname,
          COALESCE(idx_tup_read, 0)::float8
        FROM
          pg_stat_user_indexes
      type: counter
      help: Number of index entries returned by scans on this index
    - metric: pg_stat_user_indexes_idx_tup_fetch
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          indexrelname,
          COALESCE(idx_tup_fetch, 0)::float8
        FROM
          pg_stat_user_indexes
      type: counter
      help: Number of live table rows fetched by simple index scans using this index
    - metric: pg_stat_user_tables_seq_scan
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          COALESCE(seq_scan, 0)::float8
        FROM
          pg_stat_user_tables
      type: counter
      help: Number of sequential scans initiated on this table
    - metric: pg_stat_user_tables_seq_tup_read
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          COALESCE(seq_tup_read, 0)::float8
        FROM
          pg_stat_user_tables
      type: counter
      help: Number of live rows fetched by sequential scans
    - metric: pg_stat_user_tables_idx_scan
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          COALESCE(idx_scan, 0)::float8
        FROM
          pg_stat_user_tables
      type: counter
      help: Number of index scans initiated on this table
    - metric: pg_stat_user_tables_idx_tup_fetch
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          COALESCE(idx_tup_fetch, 0)::float8
        FROM
          pg_stat_user_tables
      type: counter
      help: Number of live rows fetched by index scans
    - metric: pg_stat_user_tables_n_tup_ins
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          n_tup_ins::float8
        FROM
          pg_stat_user_tables
      type: counter
      help: Number of rows inserted
    - metric: pg_stat_user_tables_n_tup_upd
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          n_tup_upd::float8
        FROM
          pg_stat_user_tables
      type: counter
      help: Number of rows updated
    - metric: pg_stat_database_tup_deleted
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          n_tup_del::float8
        FROM
          pg_stat_user_tables
      type: counter
      help: Number of rows deleted by queries in this database
    - metric: pg_stat_user_tables_n_tup_hot_upd
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          n_tup_hot_upd::float8
        FROM
          pg_stat_user_tables
      type: counter
      help: Number of rows HOT updated (i.e., with no separate index update required)
    - metric: pg_stat_user_tables_n_live_tup
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          n_live_tup::float8
        FROM
          pg_stat_user_tables
      type: gauge
      help: Estimated number of live rows
    - metric: pg_stat_user_tables_n_dead_tup
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          n_dead_tup::float8
        FROM
          pg_stat_user_tables
      type: gauge
      help: Estimated number of dead rows
    - metric: pg_stat_user_tables_n_mod_since_analyze
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          n_mod_since_analyze::float8
        FROM
          pg_stat_user_tables
      type: gauge
      help: Estimated number of rows changed since last analyze
    - metric: pg_stat_user_tables_last_vacuum
    
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          EXTRACT(EPOCH FROM AGE(COALESCE(last_vacuum, '1970-01-01Z')))::float8
        FROM
          pg_stat_user_tables
      type: gauge
      help: Last time at which this table was manually vacuumed (not counting VACUUM FULL)
    - metric: pg_stat_user_tables_last_autovacuum
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          EXTRACT(EPOCH FROM AGE(COALESCE(last_autovacuum, '1970-01-01Z')))::float8
        FROM
          pg_stat_user_tables
      type: gauge
      help: Last time at which this table was vacuumed by the autovacuum daemon
    - metric: pg_stat_user_tables_last_analyze
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          EXTRACT(EPOCH FROM AGE(COALESCE(last_analyze, '1970-01-01Z')))::float8
        FROM
          pg_stat_user_tables
      type: gauge
      help: Last time at which this table was manually analyzed
    - metric: pg_stat_user_tables_last_autoanalyze
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          EXTRACT(EPOCH FROM AGE(COALESCE(last_autoanalyze, '1970-01-01Z')))::float8
        FROM
          pg_stat_user_tables
      type: gauge
      help: Last time at which this table was analyzed by the autovacuum daemon
    - metric: pg_stat_user_tables_vacuum_count
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          vacuum_count::float8
        FROM
          pg_stat_user_tables
      type: counter
      help: Number of times this table has been manually vacuumed (not counting VACUUM FULL)
    - metric: pg_stat_user_tables_autovacuum_count
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          autovacuum_count::float8
        FROM
          pg_stat_user_tables
      type: counter
      help: Number of times this table has been vacuumed by the autovacuum daemon
    - metric: pg_stat_user_tables_analyze_count
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          analyze_count::float8
        FROM
          pg_stat_user_tables
      type: counter
      help: Number of times this table has been manually analyzed
    - metric: pg_stat_user_tables_autoanalyze_count
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          autoanalyze_count::float8
        FROM
          pg_stat_user_tables
      type: counter
      help: Number of times this table has been analyzed by the autovacuum daemon
    - metric: pg_stat_user_tables_size_bytes
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          pg_total_relation_size(relid)::float8
        FROM
          pg_stat_user_tables
      type: gauge
      help: Total disk space used by this table, in bytes, including all indexes and TOAST data
--- 
